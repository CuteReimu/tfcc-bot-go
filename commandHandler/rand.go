package commandHandler

import (
	"encoding/json"
	"fmt"
	"github.com/Logiase/MiraiGo-Template/config"
	"github.com/Mrs4s/MiraiGo/message"
	"github.com/Touhou-Freshman-Camp/tfcc-bot-go/db"
	"github.com/ozgio/strutil"
	"math/rand"
	"strconv"
	"strings"
	"sync"
	"time"
)

func init() {
	register(newRandGame())
	register(newRandCharacter())
	register(newRandSpell())
}

type randGame struct {
	games []string
}

func newRandGame() *randGame {
	return &randGame{
		games: []string{"东方红魔乡", "东方妖妖梦", "东方永夜抄", "东方风神录", "东方地灵殿", "东方星莲船", "东方神灵庙", "东方辉针城", "东方绀珠传", "东方天空璋", "东方鬼形兽", "东方虹龙洞"},
	}
}

func (r *randGame) Name() string {
	return "随作品"
}

func (r *randGame) ShowTips(int64, int64) string {
	return "随作品"
}

func (r *randGame) CheckAuth(int64, int64) bool {
	return true
}

func (r *randGame) Execute(*message.GroupMessage, string) (groupMsg *message.SendingMessage, privateMsg *message.SendingMessage) {
	n := rand.Intn(len(r.games))
	groupMsg = message.NewSendingMessage().Append(message.NewText(r.games[n]))
	return
}

type randCharacter struct {
	gameMap map[string][][]string
}

func newRandCharacter() *randCharacter {
	r := &randCharacter{
		gameMap: map[string][][]string{
			"东方红魔乡": {{"灵梦", "魔理沙"}, {"A", "B"}},
			"东方妖妖梦": {{"灵梦", "魔理沙", "咲夜"}, {"A", "B"}},
			"东方永夜抄": {{"结界组", "咏唱组", "红魔组", "幽冥组", "灵梦", "紫", "魔理沙", "爱丽丝", "咲夜", "蕾米莉亚", "妖梦", "幽幽子"}},
			"东方风神录": {{"灵梦", "魔理沙"}, {"A", "B", "C"}},
			"东方地灵殿": {{"灵梦", "魔理沙"}, {"A", "B", "C"}},
			"东方星莲船": {{"灵梦", "魔理沙", "早苗"}, {"A", "B"}},
			"东方神灵庙": {{"灵梦", "魔理沙", "早苗", "妖梦"}},
			"东方辉针城": {{"灵梦", "魔理沙", "咲夜"}, {"A", "B"}},
			"东方绀珠传": {{"灵梦", "魔理沙", "早苗", "铃仙"}},
			"东方天空璋": {{"灵梦", "琪露诺", "射命丸文", "魔理沙"}, {"（春）", "（夏）", "（秋）", "（冬）"}},
			"东方鬼形兽": {{"灵梦", "魔理沙", "妖梦"}, {"（狼）", "（獭）", "（鹰）"}},
			"东方虹龙洞": {{"灵梦", "魔理沙", "早苗", "咲夜"}},
		},
	}
	games := make([]string, 0, len(r.gameMap))
	for k := range r.gameMap {
		games = append(games, k)
	}
	for _, k := range games {
		r.gameMap[strutil.MustSubstring(k, 2, 3)] = r.gameMap[k]
		r.gameMap[strutil.MustSubstring(k, 4, 5)] = r.gameMap[k]
		r.gameMap[strutil.MustSubstring(k, 2, 5)] = r.gameMap[k]
	}
	return r
}

func (r *randCharacter) Name() string {
	return "随机体"
}

func (r *randCharacter) ShowTips(int64, int64) string {
	return "随机体"
}

func (r *randCharacter) CheckAuth(int64, int64) bool {
	return true
}

func (r *randCharacter) Execute(_ *message.GroupMessage, content string) (groupMsg *message.SendingMessage, privateMsg *message.SendingMessage) {
	if len(content) == 0 {
		groupMsg = message.NewSendingMessage().Append(message.NewText(`请输入要随机的作品，例如：“随机体 红”`))
		return
	}
	if val, ok := r.gameMap[content]; ok {
		var ret string
		for _, v := range val {
			ret += v[rand.Intn(len(v))]
		}
		groupMsg = message.NewSendingMessage().Append(message.NewText(ret))
	}
	return
}

type randSpellData struct {
	LastRandTime int64
	Count        int64
}

type spells struct {
	sync.Mutex
	spells []string
}

func (s *spells) randN(count int) []string {
	s.Lock()
	defer s.Unlock()
	var text []string
	for i := 0; i < count; i++ {
		index := i + rand.Intn(len(s.spells)-i)
		if i != index {
			s.spells[i], s.spells[index] = s.spells[index], s.spells[i]
		}
		text = append(text, s.spells[i])
	}
	return text
}

type randSpell struct {
	gameMap map[string]*spells
}

func newRandSpell() *randSpell {
	r := &randSpell{
		gameMap: map[string]*spells{
			"东方红魔乡": {spells: []string{
				"月符「月光」", "夜符「夜雀」", "暗符「境界线」",
				"雹符「冰雹暴风」", "冻符「完美冻结」", "雪符「钻石风暴」",
				"华符「卷柏 9」", "虹符「彩虹的风铃」", "幻符「华想梦葛」", "彩符「彩光乱舞」", "彩符「极彩台风」",
				"金符「银龙」", "金&水符「水银之毒」", "木符「风灵的角笛 上级」", "木符「翠绿风暴」", "木&火符「森林大火」", "水符「湖葬」", "水&木符「水精灵」", "火符「火神之光 上级」", "火符「火神的光辉」", "火&土符「环状熔岩带」", "土符「三石塔的震动」", "土符「慵懒三石塔 上级」", "土&金符「翡翠巨石」",
				"奇术「幻惑误导」", "幻幽「迷幻的杰克」", "幻世「世界」", "女仆秘技「杀人玩偶」",
				"奇术「永恒的温柔」", "神罚「年幼的恶魔之王」", "狱符「千根针的针山」", "神术「吸血鬼幻想」", "红符「绯红之主」", "「红色的幻想乡」",
				"月符「沉静的月神」", "日符「皇家圣焰」", "火水木金土符「贤者之石」", "禁忌「红莓陷阱」", "禁忌「莱瓦汀」", "禁忌「四重存在」", "禁忌「笼中鸟」", "禁忌「恋之迷宫」", "禁弹「星弧破碎」", "禁弹「折反射」", "禁弹「刻着过去的钟表」", "秘弹「之后就一个人都没有了吗？」", "QED「495年的波纹」",
			}},
			"东方妖妖梦": {spells: []string{
				"冻符「冰袭方阵 -Lunatic-」", "寒符「延长的冬日 -Lunatic-」", "怪符「桌灵转」",
				"仙符「凤凰展翅 -Lunatic-」", "阴阳「晴明大纹」", "童符「护法天童乱舞」", "方符「奇门遁甲」",
				"操符「少女文乐 -Lunatic-」", "苍符「博爱的奥尔良人偶」", "白符「白垩的俄罗斯人偶 -Lunatic-」", "雅符「春之京都人偶」", "诅咒「上吊的蓬莱人偶」",
				"骚符「活着的骚灵 -Lunatic-」", "伪弦「伪斯特拉迪瓦里」", "管灵「灵之克里福德 -Lunatic-」", "键灵「贝森朵夫神奏 -Lunatic-」", "骚葬「冥河边缘 -Lunatic-」", "大合葬「灵车大协奏曲怪」",
				"饿王剑「饿鬼十王的报应」", "狱神剑「业风神闪斩」", "修罗剑「现世妄执 -Lunatic-」", "人神剑「俗谛常住」", "天神剑「三魂七魄」",
				"六道剑「一念无量劫 -Lunatic-」", "亡乡「亡我乡 -自尽-」", "亡舞「生者必灭之理 -魔境-」", "华灵「蝶妄想」", "幽曲「埋骨于弘川 -神灵-」", "樱符「完全墨染的樱花 -开花-」", "「反魂蝶 -八分咲-」",
				"鬼符「青鬼赤鬼」", "鬼神「飞翔毘沙门天」", "式神「仙狐思念」", "式神「十二神将之宴」", "式辉「狐狸妖怪激光」", "式辉「迷人的四面楚歌」", "式辉「天狐公主 -Illusion-」", "式弹「最后的佛徒」", "式弹「片面接触」", "式神「橙」", "「狐狗狸先生的契约」", "幻神「饭纲权现降临」",
				"式神「前鬼后鬼的守护」", "式神「凭依荼吉尼天」", "结界「梦境与现实的诅咒」", "结界「动与静的均衡」", "结界「光明与黑暗的网目」", "罔两「直球与曲球的梦乡」", "罔两「八云紫的神隐」", "罔两「栖息于禅寺的妖蝶」", "魍魉「二重黑死蝶」", "式神「八云蓝」", "「人类与妖怪的境界」", "结界「生与死的境界」", "紫奥义「弹幕结界」",
			}},
			"东方永夜抄": {spells: []string{
				"萤符「地上的流星」", "灯符「萤光现象」", "蠢符「夜虫龙卷」", "隐虫「永夜蛰居」",
				"声符「木菟的咆哮」", "猛毒「毒蛾的黑暗演舞」", "鹰符「祸延疾冲」", "夜盲「夜雀之歌」", "夜雀「午夜中的合唱指挥」",
				"产灵「最初的金字塔」", "始符「短命的137」", "野符「GHQ的危机」", "国体「三种神器　乡」", "虚史「幻想乡传说」", "未来「高天原」",
				"梦境「二重大结界」", "散灵「梦想封印　寂」", "神技「八方龙杀阵」", "回灵「梦想封印　侘」", "大结界「博丽弹幕结界」", "神灵「梦想封印　瞬」",
				"魔空「小行星带」", "黑魔「黑洞边缘」", "恋风「星光台风」", "恋心「二重火花」", "光击「射月」", "魔炮「超究极火花」",
				"幻波「赤眼催眠（心灵风暴）」", "狂视「狂视调律（幻觉追迹者）」", "懒惰「生神停止（心灵制止）」", "散符「真实之月（隐形满月）」", "月眼「月兔远程催眠术（远程催眠）」",
				"天丸「壶中的天地」", "神符「天人的族谱」", "苏生「复苏游戏」", "神脑「思兼的头脑」", "天咒「阿波罗13号」", "秘术「天文密葬法」", "禁药「蓬莱之药」",
				"药符「壶中的大银河」", "神宝「耀眼的龙玉」", "神宝「佛体的金刚石」", "神宝「火蜥蜴之盾」", "神宝「无限的生命之泉」", "神宝「蓬莱的玉枝　-梦色之乡-」", "「永夜归返　-待宵-」", "「永夜归返　-子时四刻-」", "「永夜归返　-丑时四刻-」", "「永夜归返　-寅时四刻-」", "「永夜归返　-世间开明-」",
				"旧史「旧秘境史 -古代史-」", "转世「一条归桥」", "新史「新幻想史 -现代史-」", "时效「月岩笠的诅咒」", "不死「火鸟　-凤翼天翔-」", "藤原「灭罪寺院伤」", "不死「徐福时空」", "灭罪「正直者之死」", "虚人「无」", "不灭「不死鸟之尾」", "蓬莱「凯风快晴　-富士火山-」", "「不死鸟附体」", "「蓬莱人形」", "「不朽的弹幕」",
				"「不合时令的蝶雨」", "「失明的夜雀」", "「日出国之天子」", "「幻胧月睨（疯狂红眼）」", "「天网蛛网捕蝶之法」", "「蓬莱的树海」", "「不死鸟重生」", "「远古的欺骗者」", "「无何有的浄化」", "「梦想天生」", "「彗星」", "「收缩的世界」", "「待宵反射卫星斩」", "「猎奇剧团里的怪人」", "「绯红色的命运」", "「西行寺无余涅槃」", "「深弹幕结界 -梦幻泡影-」",
			}},
			"东方风神录": {spells: []string{
				"叶符「纷乱的落叶」", "秋符「无常秋日与少女的心」", "丰收「谷物神的允诺」",
				"厄符「厄神大人的生理节律」", "疵痕「损坏的护符」", "悲运「大钟婆之火」", "创符「流放人偶」",
				"光学「水迷彩」", "漂溺「粼粼水底之心伤」", "水符「河童之幻想大瀑布」", "河童「回转顶板」",
				"岐符「猿田彦神之岔路」", "风神「二百十日」", "「无双风神」", "塞符「天上天下的照国」",
				"秘术「一脉单传之弹幕」", "奇迹「客星璀璨之夜」", "开海「摩西之奇迹」", "准备「召请建御名方神」", "大奇迹「八坂之神风」",
				"奇祭「目处梃子乱舞」", "神谷「神灵之谷」", "神秘「大和环面」", "天龙「雨之源泉」", "「风神之神德」",
				"神符「如水眼之美丽源泉」", "神符「结于杉木之古缘」", "神符「神所踏足之御神渡」", "开宴「二拜二拍一拜」", "土著神「手长足长大人」", "神具「洩矢的铁轮」", "源符「厌川的翡翠」", "蛙狩「蛙以口鸣，方致蛇祸」", "土著神「七石七木」", "土著神「小小青蛙不输风雨」", "土著神「宝永四年的赤蛙」", "「诹访大战 ～ 土著神话 vs 中央神话」", "祟符「洩矢大人」",
			}},
			"东方地灵殿": {spells: []string{
				"怪奇「钓瓶落之怪」", "蜘蛛「石窟的蜘蛛巢」", "瘴气「原因不明的热病」",
				"嫉妒「看不见的绿眼怪兽」", "开花爷爷「小白的灰烬」", "剪舌麻雀「大葛笼与小葛笼」", "恨符「丑时参拜第七日」",
				"鬼符「怪力乱神」", "枷符「罪人不释之枷」", "力业「大江山颪」", "四天王奥义「三步必杀」",
				"回忆「恐怖催眠术」", "回忆「二重黑死蝶」", "回忆「飞行虫之巢」", "回忆「波与粒的境界」", "回忆「户隐山之投」", "回忆「百万鬼夜行」", "回忆「蒙蒙迷雾」", "回忆「风神木叶隐身术」", "回忆「天狗巨暴流」", "回忆「鸟居旋风」", "回忆「春之京都人偶」", "回忆「稻草人偶敢死队」", "回忆「回归虚无」", "回忆「水银之毒」", "回忆「水精公主」", "回忆「贤者之石」", "回忆「延展手臂」", "回忆「河童之河口浪潮」", "回忆「粼粼水底之心伤」",
				"猫符「怨灵猫乱步」", "咒精「怨灵凭依妖精」", "尸灵「食人怨灵」", "赎罪「古时之针与痛楚的怨灵」", "「小恶灵复活」",
				"妖怪「火焰的车轮」", "核热「核反应失控」", "爆符「千兆耀斑」", "焰星「十凶星」", "「地狱的托卡马克装置」", "「地底的太阳」",
				"秘法「九字切」", "奇迹「神秘果」", "神德「五谷丰穰米之浴」", "表象「列祖列宗入梦来」", "表象「弹幕偏执症」", "本能「本我的解放」", "抑制「超我」", "反应「妖怪测谎机」", "无意识「弹幕的墨迹测验」", "复燃「恋爱的埋火」", "深层「无意识的基因」", "「被厌恶者的哲学」", "「地底的蔷薇」",
			}},
			"东方星莲船": {spells: []string{
				"棒符「忙碌探知棒」", "搜符「黄金探测器」", "守符「灵摆防御」",
				"大轮「你好，被遗忘的世界」", "伞符「雨伞的星之追忆」", "雨伞「超防水干爽伞妖」", "化铁「备用伞特急夜晚狂欢号」",
				"神拳「天海地狱冲」", "连打「帝王海妖来袭」", "溃灭「天上天下连续勾拳」", "忿怒「空前绝后巨眼焚身」",
				"倾覆「击沉之锚」", "溺符「沉底漩涡」", "港符「幽灵船永久停泊」", "幽灵「悄然袭来的长勺」",
				"宝塔「最优良的宝物」", "宝塔「光辉宝枪」", "光符「正义之威光」", "法灯「无瑕佛法之独钴杵」", "「完全净化」",
				"吉兆「极乐的紫色云路」", "魔法「魔法之蝶」", "光魔「魔法银河系」", "大魔法「魔神复诵」", "超人「圣白莲」", "飞钵「传说的飞空圆盘」",
				"伞符「大颗的泪雨」", "惊雨「台风骤雨」", "光晕「唐伞惊吓闪光」", "妖云「平安时代的黑云」", "真相不明「愤怒的红色UFO袭来」", "鵺符「鵺的蛇行表演」", "真相不明「哀愁的蓝色UFO袭来」", "鵺符「弹幕奇美拉」", "真相不明「忠义的绿色UFO袭来」", "鵺符「真相不明的黑暗」", "真相不明「恐怖的虹色UFO袭来」", "「平安京的恶梦」", "恨弓「源三位赖政之弓」",
			}},
			"东方神灵庙": {spells: []string{
				"符牒「死蝶之舞　- 樱花 -」", "幽蝶「幽魂聚地　- 樱花 -」", "冥符「常夜樱」", "樱符「西行樱吹雪」", "樱符「樱吹雪地狱」",
				"响符「混乱的山谷回声」", "响符「强力共振」", "山彦「扩大回声」", "山彦「山彦的本领发挥回音」", "大声「激动Yahoo」",
				"虹符「雨伞风暴」", "回复「借由欲望的恢复」", "毒爪「Poison Murder」", "毒爪「不死杀人鬼」", "欲灵「贪分欲吞噬者」",
				"邪符「孤魂野鬼」", "入魔「走火入魔」", "通灵「通灵芳香」", "道符「道胎动」", "道符「TAO胎动　～道～」",
				"雷矢「元兴寺的龙卷」", "怨灵「入鹿之雷」", "天符「天之磐舟哟，向天飞升吧」", "投皿「物部氏的八十平瓮」", "炎符「火烧樱井寺」", "圣童女「大物忌正餐」", "圣童女「太阳神的贡品」",
				"名誉「十二阶之冠位」", "仙符「日出之处的天子」", "召唤「豪族乱舞」", "秘宝「圣德太子的欧帕兹」", "「神灵大宇宙」", "光符「救世之光」", "神光「无忤为宗」", "「新生的神灵」",
				"未知「轨道不明的鬼火」", "未知「姿态不明的空鱼」", "未知「原理不明的妖怪玉」", "一回胜负「灵长类弹幕变化」", "二回胜负「肉食类弹幕变化」", "三回胜负「羽鸟类弹幕变化」", "四回胜负「两栖类弹幕变化」", "五回胜负「鸟兽戏画」", "六回胜负「狸猫的变身学校」", "七回胜负「野生的离岛」", "「野生地毯」", "变化「魔奴化巫女的伪退治」", "「猯藏化弹幕十变化」", "貉符「满月下的腹鼓舞」",
			}},
			"东方辉针城": {spells: []string{
				"冰符「终极暴风雪」", "水符「尾鳍拍击」", "鳞符「逆鳞的大惊涛」",
				"飞符「飞行之头」", "首符「辘轳首飞来」", "飞头「第九个头」", "飞头「杜拉罕之夜」",
				"牙符「月下的犬齿」", "变身「星形齿」", "咆哮「满月的远吠」", "天狼「高速猛扑」",
				"平曲「祇园精舍的钟声」", "怨灵「平家的大怨灵」", "乐符「双重乐谱」", "琴符「诸行无常的琴声」", "响符「回音之庭」", "筝曲「下克上安魂曲」",
				"欺符「逆针击」", "逆符「镜中的邪恶」", "逆符「天下翻覆」", "逆弓「天壤梦弓的诏敕」", "逆转「变革空勇士」",
				"小弹「小人的荆棘路」", "小槌「变得更大吧」", "妖剑「辉针剑」", "小槌「你给我变大吧」", "「一寸之墙」", "「七个一寸法师」",
				"弦乐「风暴的合奏」", "弦乐「净琉璃世界」", "一鼓「暴乱宫太鼓」", "二鼓「怨灵绫鼓」", "三鼓「午夜零时的三振」", "死鼓「轻敲大地」", "五鼓「雷电拨浪鼓」", "六鼓「交替打击法」", "七鼓「高速和太鼓火箭」", "八鼓「雷神之怒」", "「蓝色佳人的演出」", "「原初的节拍」",
			}},
			"东方绀珠传": {spells: []string{
				"凶弹「高速撞击」", "弹符「鹰已击中」", "铳符「月狂之枪」",
				"兔符「浆果浆果团子」", "弹符「团子影响力」", "赏月酒「月狂的九月」",
				"梦符「绯红色的压迫噩梦」", "梦符「愁永远之梦」", "梦符「刈安色的错综迷梦」", "梦符「梦我梦中」", "月符「绀色的狂梦」",
				"玉符「乌合的二重咒」", "玉符「秽身探知型水雷　改」", "玉符「众神的光辉弹冠」", "「孤翼的白鹭」",
				"狱符「地狱之蚀」", "狱符「星与条纹」", "狱炎「擦弹的狱意」", "地狱「条纹状的深渊」", "「阿波罗捏造说」",
				"「掌上的纯光」", "「杀意的百合」", "「现代的神灵界」", "「战栗的寒冷之星」", "「纯粹的狂气」", "「地上秽的纯化」", "纯符「纯粹的弹幕地狱」",
				"蝴蝶「取而代之的蝴蝶」", "超特急「梦幻快车」", "爬梦「爬行的子弹」", "异界「逢魔之刻」", "地球「邪秽在身」", "月「阿波罗反射镜」", "「用于逼死瓮中鼠的单纯弹幕」", "异界「地狱的非理想弹幕」", "地球「落向地狱的雨」", "月「月狂冲击」", "「用于杀人的纯粹弹幕」", "「三位一体论狂想曲」", "「最初与最后的无名弹幕」",
			}},
			"东方天空璋": {spells: []string{
				"蝶符「凤蝶的鳞粉」", "蝶符「盛夏振翅」",
				"雨符「被诅咒的暴雨」", "刃符「山姥的鬼菜刀研磨」", "尽符「Bloody Mountain Murder」",
				"春符「惊喜之春」", "狗符「山狗的散步」", "独乐「蜷缩而死」", "狛符「单人式阿吽的呼吸」",
				"魔符「即席菩提」", "魔符「作宠物的巨大弹生命体」", "地藏「业火救济」",
				"竹符「竹之狂舞」", "茗荷「忘却你的名字」", "笹符「七夕星祭」", "冥加「在你背后」", "舞符「背后之祭」", "狂舞「狂乱天狗怖吓」",
				"后符「绝对秘神的后光」", "里夏「异常酷暑之焦土」", "里秋「异常枯死之饿鬼」", "里冬「异常降雪之雪人」", "里春「异常落花之魔术使」", "「里·吹拂樱花」", "「里·完美夏冰」", "「里·疯狂秋风」", "「里·极端寒冬」",
				"鼓舞「强力助威」", "狂舞「疯狂的背景舞」", "弹舞「双目台风」", "秘仪「逆向呼神者」", "秘仪「背叛的后方射击」", "秘仪「弹幕的玉茧」", "秘仪「秽那之火」", "秘仪「后户的狂言」", "秘仪「摩多罗苦谛」", "秘仪「七星之剑」", "秘仪「无纽带的艺人」", "「背面的暗黑猿乐」", "「无秩序弹幕地狱」",
			}},
			"东方鬼形兽": {spells: []string{
				"石符「石头针叶林」", "石符「大孩子们的灵薄狱」",
				"石符「沉重的石之婴儿」", "溺符「三途的沦溺」", "鬼符「饿鬼围城」",
				"水符「分水的顶级试炼」", "光符「瞭望的顶级试炼」", "鬼符「鬼渡的狱级试炼」",
				"龟符「龟甲地狱」", "鬼符「邪道之鬼畜生」", "龙符「龙纹弹」",
				"埴轮「熟练弓兵埴轮」", "埴轮「熟练剑士埴轮」", "埴轮「熟练骑马兵埴轮」", "埴轮「不败的无尽兵团」",
				"方形「方形造物」", "圆形「圆形造物」", "线形「线形造物」", "埴轮「偶像造物」", "「鬼形造形术」", "「几何造物」", "「造形恶魔」",
				"血战「血之分水岭」", "血战「狱界视线」", "血战「全灵鬼渡」", "劲疾技「惊险射击」", "劲疾技「闪电嘶鸣」", "劲疾技「浓云」", "劲疾技「兽性感染」", "劲疾技「三角追击」", "劲疾技「黑色天马流星弹」", "劲疾技「肌肉爆破」", "「莫慌跟上我」", "「鬼形的乌合之众」", "「鬼畜生之所为」",
			}},
			"东方虹龙洞": {spells: []string{
				"招符「弹幕万来」", "招符「弹灾招福」",
				"森符「真·木隐的技术」", "森符「真·最深的森域」", "叶技「绿色龙卷」",
				"山怪「惊愕的云间草」", "山怪「妖魔喧嚣的薄雪草」", "山花「杀戮的山之女王」",
				"玉符「阴阳神玉」", "女王珠「彩虹门的另一侧」", "「阴阳窒息」",
				"祸星「星火燎原乱舞」", "星风「虹彩陆离乱舞」", "光马「天马行空乱舞」", "虹光「光风霁月」",
				"「向无主的贡品」", "「弹幕收集狂的妄执」", "「弹幕自由市场」", "「虹人环」", "「无道的弹幕领土」", "「弹幕的庇护所」",
				"狐符「狐之绞盘」", "管狐「圆管之狐」", "星狐「天狐龙星之舞」", "蛊毒「食人昆虫」", "蛊毒「洞穴蜂群」", "蛊毒「飞天蜈蚣」", "采掘「不断累积的矿山废石」", "采掘「矿山爆破」", "采掘「妖怪们的盾构法」", "大蜈蚣「噬蛇者」", "大蜈蚣「噬龙者」", "「蛊毒的美食家」", "「虫姬殿下的闪耀忙乱的日常」",
			}},
		},
	}
	games := make([]string, 0, len(r.gameMap))
	for k := range r.gameMap {
		games = append(games, k)
	}
	r.gameMap["全部"] = &spells{spells: []string{}}
	for _, v := range r.gameMap {
		s := r.gameMap["全部"]
		s.spells = append(s.spells, v.spells...)
	}
	for _, k := range games {
		r.gameMap[strutil.MustSubstring(k, 2, 3)] = r.gameMap[k]
		r.gameMap[strutil.MustSubstring(k, 4, 5)] = r.gameMap[k]
		r.gameMap[strutil.MustSubstring(k, 2, 5)] = r.gameMap[k]
	}
	return r
}

func (r *randSpell) Name() string {
	return "随符卡"
}

func (r *randSpell) ShowTips(int64, int64) string {
	return "随符卡"
}

func (r *randSpell) CheckAuth(int64, int64) bool {
	return true
}

func (r *randSpell) Execute(msg *message.GroupMessage, content string) (groupMsg *message.SendingMessage, privateMsg *message.SendingMessage) {
	oneTimeLimit := config.GlobalConfig.GetInt("qq.rand_one_time_limit")
	if len(content) == 0 {
		groupMsg = message.NewSendingMessage().Append(message.NewText(fmt.Sprintf(`请输入要随机的作品与符卡数量，例如：“随符卡 红”或“随符卡 全部 %d”`, oneTimeLimit)))
		return
	}
	cmds := strings.Split(content, " ")
	content = cmds[0]
	var count int
	if len(cmds) <= 1 {
		count = 1 // 默认抽取一张符卡
	} else {
		countStr := cmds[1]
		var err error
		count, err = strconv.Atoi(countStr)
		if err != nil || count == 0 || count > oneTimeLimit {
			groupMsg = message.NewSendingMessage().Append(message.NewText(fmt.Sprintf(`请输入%d以内数字，例如：“随符卡 红 %d”或“随符卡 全部 %d”`, oneTimeLimit, oneTimeLimit, oneTimeLimit)))
			return
		}
	}
	if val, ok := r.gameMap[content]; ok {
		if count > len(val.spells) {
			groupMsg = message.NewSendingMessage().Append(message.NewText(fmt.Sprintf(`请输入小于或等于该作符卡数量%d的数字`, len(val.spells))))
			return
		}
		db.UpdateWithTtl([]byte("rand_spell:"+strconv.FormatInt(msg.Sender.Uin, 10)), func(oldValue []byte) ([]byte, time.Duration) {
			var d *randSpellData
			if oldValue == nil {
				d = &randSpellData{}
			} else {
				err := json.Unmarshal(oldValue, &d)
				if err != nil {
					logger.WithError(err).Errorln("unmarshal json failed")
					return nil, 0
				}
			}
			now := time.Now()
			yy, mm, dd := now.Date()
			yy2, mm2, dd2 := time.Unix(d.LastRandTime, 0).Date()
			if !(yy == yy2 && mm == mm2 && dd == dd2) {
				d.Count = 0
			}
			d.Count++
			limitCount := config.GlobalConfig.GetInt64("qq.rand_count")
			if d.Count <= limitCount {
				text := val.randN(count)
				groupMsg = message.NewSendingMessage().Append(message.NewText(strings.Join(text, "\n")))
			} else if d.Count == limitCount+1 {
				groupMsg = message.NewSendingMessage().Append(message.NewText(fmt.Sprintf("随符卡一天只能使用%d次", limitCount)))
			}
			d.LastRandTime = now.Unix()
			newValue, err := json.Marshal(d)
			if err != nil {
				logger.WithError(err).Errorln("unmarshal json failed")
				return nil, 0
			}
			return newValue, time.Hour * 24
		})
	}
	return
}
